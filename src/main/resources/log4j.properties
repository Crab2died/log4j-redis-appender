### 设置###
log4j.rootLogger=DEBUG,CONSOLE,D,I,E,redis
### 输出SQL信息到控制抬 ###
log4j.logger.com.ibatis=INFO
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=INFO
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=INFO
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
### 输出信息到控制抬 ###
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=UTF-8
log4j.appender.CONSOLE.Threshold=DEBUG
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss} %m%n
### 输出DEBUG 级别以上的日志到/logs/当前项目名称/log.log ###
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=/logs/debug.log
log4j.appender.D.DatePattern='.'yyyy-MM-dd
log4j.appender.D.Append=true
log4j.appender.D.Threshold=DEBUG
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH:mm:ss} [%l] %m%n
### 输出INFO 级别以上的日志到/logs/当前项目名称/log.log ###
log4j.appender.I=org.apache.log4j.DailyRollingFileAppender
log4j.appender.I.File=/logs/info.log
log4j.appender.I.DatePattern='.'yyyy-MM-dd
log4j.appender.I.Append=true
log4j.appender.I.Threshold=INFO
log4j.appender.I.layout=org.apache.log4j.PatternLayout
log4j.appender.I.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH:mm:ss} [%l] %m%n
### 输出ERROR 级别以上的日志到/logs/当前项目名称/log.log ###
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File=/logs/info.log
log4j.appender.E.DatePattern='.'yyyy-MM-dd
log4j.appender.E.Append=true
log4j.appender.E.Threshold=INFO
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH:mm:ss} [%l] %m%n

# ***************************************log4j to redis扩展开始********************************************* #

# 设置扩展类 这个就是别动了
log4j.appender.redis=com.github.log4j.RedisAppender

#-------------------------------------日志输出(写入redis格式配置,共有3种)--------------------------------------#
# -----------第一种开始表演------------- #
# 这一种是log4j本身支持的格式配置，这一种级别最高,也就是如果配置了这个将最优先选择这种输出形式
# log4j 输出格式控制器
#log4j.appender.redis.layout=org.apache.log4j.PatternLayout
# 设置日志输出格式
#log4j.appender.redis.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH:mm:ss} [%l] %m%n
# -----------第一种表演结束------------- #

# -----------第二种开始表演------------- #
# 这一种是自定义输出对象实现类(该类需实现com.github.format.LogFormatFeature接口，返回一个Object对象),
# 该对象将通过fastjson转为JSON对象存入redis, 这一种级别老二(也就是第一种没配，默认就来找它了)
#log4j.appender.redis.logFormatFeature=com.github.LogFormat
# -----------第二种表演结束------------- #

# -----------第三种开始表演------------- #
# 第三种是接盘侠, 扩展自带的一种输出格式,其实就是 LoggingEventX 的JSON对象,假若第一、二种都没配置就是它了
# -----------第三种表演结束------------- #

# fastjson对日期的处理 默认为 yyyy-MM-dd'T'HH:mm:ss.SSS'+0800' 没错就是这个,为kibana日期处理带来便利
log4j.appender.redis.dateFormatter=yyyy-MM-dd'T'HH:mm:ss.SSS'+0800'

#---------------------------------------Redis连接相关配置--------------------------------------------------#
# redis连接地址与端口 默认 localhost:6379
log4j.appender.redis.host=127.0.0.1
log4j.appender.redis.port=6379
# redis连接密码,有就配,么有就注释掉或不配 默认木有
log4j.appender.redis.password=

# 下面一坨都是redis连接池相关配置,这里给出的值都是默认值
log4j.appender.redis.timeout=10000
log4j.appender.redis.minEvictableIdleTimeMillis=60000
log4j.appender.redis.timeBetweenEvictionRunsMillis=30000
log4j.appender.redis.numTestsPerEvictionRun=-1
log4j.appender.redis.maxTotal=8
log4j.appender.redis.maxIdle=0
log4j.appender.redis.minIdle=0
log4j.appender.redis.blockWhenExhaused=false
log4j.appender.redis.evictionPolicyClassName=
log4j.appender.redis.lifo=false
log4j.appender.redis.testOnBorrow=false
log4j.appender.redis.testWhileIdle=false
log4j.appender.redis.testOnReturn=false

# 这是选择日志数据插入哪个redis库(redis默认是0-15),这里默认是0
log4j.appender.redis.dbIndex=1
# 设置日志列表名,默认是log4j-log
log4j.appender.redis.key=log4j-log

# 设置日志级别, 这是表示DEBUG及以上的日志将写入redis库
log4j.appender.redis.Threshold=DEBUG

